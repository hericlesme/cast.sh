name: Python package

on:
  push:
    branches:
    - master
    - dev
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get update
        # Get stable version of chrome driver
        wget https://chromedriver.storage.googleapis.com/78.0.3904.70/chromedriver_linux64.zip
        unzip chromedriver_linux64.zip
        sudo mv chromedriver /usr/bin/chromedriver
        sudo chown root:root /usr/bin/chromedriver
        sudo chmod +x /usr/bin/chromedriver
        pip install -r requirements.txt
        # Install testing dependencies
        pip install -r dev_requirements.txt
        # Build app as docker container
        docker build -t cast .
        docker run -d --name cast.sh-container -p 5000:5000/tcp -i -t cast

    - name: Set environment 
      run: |
        # include ChromeDriver in PATH
        export PATH=$PATH:/usr/bin/chromedriver

    
    - name: Check format and 
      run: |
        # Stop build if python files arent formatted correctly
        black --check --verbose .
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run tests
      run: |
        pytest --verbose
        pytest --cov=cast tests/
